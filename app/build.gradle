apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'androidx.navigation.safeargs.kotlin'

apply plugin: 'jacoco'

apply plugin: 'kotlin-allopen'

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
    ])
}

android {
    compileSdkVersion androidConfig.compileSdkVersion
    defaultConfig {
        applicationId "com.rjkolli.gfsample"
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
        }
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        animationsDisabled true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // android standard libraries
    implementation dep.androidxAppCompactDep
    implementation dep.constraintLayoutDep

    // kotlin standard libraries
    implementation dep.kotlinDep
    implementation dep.androidxCoreKtxDep

    // design libraries
    implementation dep.googleMaterialDep

    // navigation
    implementation dep.navigationFragmentKtxDep
    implementation dep.navigationUiKtxDep

    // google maps
    implementation dep.gooleMaps
    implementation dep.gooleMapsLocation

    // gson
    implementation dep.gson
    
    // dagger
    implementation dep.daggerDep
    implementation dep.daggerAndroidDep
    implementation dep.daggerAndroidSupportDep
    kapt dep.daggerAndroidProDep
    kapt dep.daggerCompilerDep

    // life cycle
    implementation dep.lifecycleRuntime
    implementation dep.lifecycleExtension
    annotationProcessor dep.lifecycleCompiler

    // unit test
    testImplementation testDep.jUnitTestDep

    // android test
    androidTestImplementation testDep.androidTestRunnerDep
    androidTestImplementation testDep.androidExtJunitTestDep
    androidTestImplementation testDep.androidEspressoTestDep
}
